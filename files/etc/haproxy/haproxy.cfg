# haproxy config
global
  maxconn 11111
  log /dev/log local0 info
  tune.vars.txn-max-size 16384
  tune.vars.sess-max-size 16384
  tune.ssl.default-dh-param 4096
  lua-prepend-path /etc/haproxy/lua/?/http.lua
  lua-load /etc/haproxy/lua/auth-request.lua
  lua-load /etc/haproxy/lua/general.lua
  ssl-default-bind-ciphers HIGH:!aNULL:!eNULL:!MD5:!PSK:!SRP
  ssl-default-bind-options no-tls-tickets ssl-min-ver TLSv1.2
  nbthread 2

defaults
  log global
  mode http
  option httplog
  option forwardfor
  option http-server-close
  timeout connect 30s
  timeout client 333s
  timeout server 333s

frontend fe_http
  mode http
  bind :::80 v4v6
  http-request redirect scheme https code 301

frontend fe_https
  # config:
  mode http
  bind :::443 v4v6 ssl crt /etc/ssl/private/main.pem curves secp384r1 alpn h2,http/1.1

  # logging:
  #log_format main '$host $remote_addr - $remote_user '
  #'[$time_iso8601] "$request" $status $body_bytes_sent '
  #'"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  capture request header Host len 77
  capture request header Referer len 777
  capture request header User-Agent len 222
  capture request header X-Forwarded-For len 111
  http-request set-var(txn.http_user) req.hdr(Authorization),word(2,' '),b64dec,field(1,:)
  http-request set-var(txn.iso8601_now) lua.iso8601-now()
  log-format '%{+E}o %[capture.req.hdr(0)] %ci - %[var(txn.http_user)] [%[var(txn.iso8601_now)]] "%[capture.req.method] %[capture.req.uri] %[capture.req.ver]" %ST %B %{+Q,+E}[capture.req.hdr(1)] %{+Q,+E}[capture.req.hdr(2)] %{+Q,+E}[capture.req.hdr(3)]'

  # acl:
  http-request set-var(txn.original_path) path
  acl host_yau hdr(host) -i yau.REPLACE_secret_tld_REPLACE
  acl path_ubad var(txn.original_path) -m reg ^/ubus.+
  acl path_expo var(txn.original_path) -m dir /metrics
  acl path_repo var(txn.original_path) -m reg /openwrt-[^\s]+
  acl path_3xui var(txn.original_path) -m reg ^/3x-ui-[^/]+
  acl path_basic var(txn.original_path) -m reg ^/login/?[^\s]*
  acl path_luci var(txn.original_path) -m reg ^/luci-(cgi|sta)-[^\s]+
  acl path_ubus var(txn.original_path) -m reg ^/luci-cgi-[^/]+/luci/admin/ubus
  acl path_couch var(txn.original_path) -m dir /REPLACE_couch_uri_REPLACE
  acl path_auth var(txn.original_path) -m dir /autheliaReplaceAutheliaUriSecretReplace
  # uncomment next line to enable authelia:
  #http-request set-var(req.need2prot) bool(1) if host_yau path_basic or !host_yau path_luci or !host_yau path_ubus or !host_yau path_3xui
  acl prot-fe var(req.need2prot) bool

  # headers:
  http-request replace-path ^/REPLACE_couch_uri_REPLACE/(.*)$ /\1 if path_couch host_yau
  http-request set-var(req.scheme) str(https) if { ssl_fc }
  http-request set-var(req.scheme) str(http) if !{ ssl_fc }
  http-request set-var(req.questionmark) str(?) if { query -m found }
  http-request set-header Connection close
  http-request set-header X-Real-IP %[src]
  acl hdr-xff_exists req.hdr(X-Forwarded-For) -m found
  http-request set-header X-Forwarded-For %[src] if !hdr-xff_exists
  http-request set-header Host yau.REPLACE_secret_tld_REPLACE if host_yau
  http-request set-header X-Forwarded-Method %[method]
  http-request set-header X-Forwarded-Proto %[var(req.scheme)]
  http-request set-header X-Forwarded-Host %[req.hdr(Host)]
  http-request set-header X-Forwarded-URI %[path]%[var(req.questionmark)]%[query]

  # authelia:
  http-request lua.auth-intercept be_authelia /autheliaReplaceAutheliaUriSecretReplace/api/authz/forward-auth HEAD * remote-user,remote-groups,remote-name,remote-email - if prot-fe
  http-request deny if prot-fe !{ var(txn.auth_response_successful) -m bool } { var(txn.auth_response_code) -m int 403 }
  http-request redirect location %[var(txn.auth_response_location)] if prot-fe !{ var(txn.auth_response_successful) -m bool }

  # routing:
  http-request set-path "/ubus" if path_ubus
  use_backend be_empty if host_yau path_auth { src -f authelia2ban.map }
  use_backend be_authelia if host_yau path_auth
  use_backend be_empty if host_yau path_couch { src -f couch2ban.map }
  use_backend be_couch if host_yau path_couch
  use_backend be_empty if host_yau { src -f yau2ban.map }
  use_backend be_yau if host_yau
  use_backend be_repo if path_repo
  use_backend be_deny if path_ubad
  use_backend be_expo if path_expo { src 192.168.0.0/16 10.0.0.0/8 }
  use_backend be_3xui if path_3xui !{ src -f 3xui2ban.map }
  use_backend be_luci if path_luci !{ src -f luci2ban.map }
  default_backend be_empty

# backends:
backend be_luci
  mode http
  server luci 127.0.0.1:5080
  http-response del-header X-Powered-By
  http-response set-header X-Frame-Options "DENY"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains"

backend be_3xui
  mode http
  server s3xui 127.0.0.1:5035 ssl verify none
  http-response del-header X-Powered-By
  http-response set-header X-Frame-Options "DENY"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains"

backend be_yau
  mode http
  server beyau 192.168.77.113:1801
  http-response del-header server
  http-response del-header X-Powered-By
  http-response set-header X-Frame-Options "DENY"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains"

backend be_couch
  mode http
  server becouch 192.168.77.113:5984
  http-response del-header server
  http-response del-header X-Powered-By
  http-response del-header couch -m sub
  http-response set-header X-Frame-Options "DENY"
  http-response set-header X-Content-Type-Options "nosniff"
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubdomains"

backend be_authelia
  mode http
  server authelia 127.0.0.1:9091

backend be_expo
  mode http
  server expo 127.0.0.1:9100

backend be_repo
  mode http
  server repo 192.168.77.114:80

backend be_empty
  mode http
  http-request return status 200 content-type "text/plain" string "Hello" hdr X-Frame-Options "DENY" hdr X-Content-Type-Options "nosniff" hdr X-XSS-Protection "1; mode=block" hdr Strict-Transport-Security "max-age=63072000; includeSubdomains"

backend be_deny
  mode http
  http-request deny
